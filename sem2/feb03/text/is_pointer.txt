Шаблоны структур, в отличие от шаблонов функций, можно специализировать частично: https://en.cppreference.com/w/cpp/language/partial_specialization

Так выглядит шаблон структур, которые определяют, совпадают ли два типа:

template<typename T, typename U>
struct is_same
{
    static constexpr bool value = false;
};
template<typename T>
struct is_same<T, T>
{
    static constexpr bool value = true;
};
Правила, по которым компилятор выбирает, какой шаблон использовать, несколько запутанны, но идея проста -- выбирается более специализированный, то есть тот, у кого множество допустимых шаблонных параметров окажется подмножеством других.

Используя частичную специализацию, реализуйте шаблон структур

template<typename T>
struct is_pointer;

которые содержат статическое поле value типа bool, равное true, если T -- это указатель, и false в ином случае.
